<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wwAAAABJRU5ErkJggg==
</value>
  </data>
</root>